{"version":3,"sources":["contexts/PostsContext.js","providers/PostsProvider.js","hooks/useJsonFetch.js","components/EditableItem.js","components/inputs/PostInput.js","components/buttons/ApplyButton.js","components/posts/PostItem.js","components/loaders/Loader.js","components/posts/PostsList.js","components/pages/HomePage.js","components/buttons/CancelButton.js","components/pages/NewPostPage.js","components/pages/SelectedPostPage.js","components/pages/EditPostPage.js","components/pages/NotFoundPage.js","App.js","index.js"],"names":["PostsContext","createContext","PostsProvider","props","url","method","useState","posts","setPosts","isLoading","setLoading","hasError","setError","fetchReqFlag","setFetchReqFlag","useEffect","a","fetch","response","json","data","ok","Error","status","prev","message","setTimeout","fetchData","useJsonFetch","process","inputValue","setInputValue","selectedPost","setSelectedPost","Provider","value","className","children","EditableItem","PostInput","useContext","placeholder","name","onChange","e","target","style","height","scrollHeight","ApplyButton","onBtnClick","onClick","PostItem","post","to","id","handlingPostClick","src","avatar","alt","moment","created","format","content","Loader","PostsList","element","length","map","HomePage","history","match","trim","push","CancelButton","NewPostPage","onNewPostClick","preventDefault","body","JSON","stringify","goBack","console","log","SelectedPostPage","onDelBtnClick","EditPostPage","onApplyChanges","NotFoundPage","App","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d6e50f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PostsContext = createContext();\n\nexport default PostsContext;\n","import { useState } from 'react';\n\nimport PostsContext from '../contexts/PostsContext';\nimport useJsonFetch from '../hooks/useJsonFetch';\n\nexport default function PostsProvider(props) {\n  const serverUrl = process.env.REACT_APP_URL;\n\n  const [ \n    posts, \n    setPosts, \n    isLoading, \n    hasError, \n    fetchReqFlag, \n    setFetchReqFlag ] = useJsonFetch(`${serverUrl}posts`, 'GET');\n  const [ inputValue, setInputValue] = useState('');\n  const [ selectedPost, setSelectedPost] = useState('');\n\n  return (\n    <PostsContext.Provider \n      value={{\n        posts,\n        setPosts,\n        isLoading,\n        hasError,\n        inputValue,\n        setInputValue,\n        selectedPost,\n        setSelectedPost,\n        fetchReqFlag,\n        setFetchReqFlag,\n      }\n      }>\n        <div className=\"posts-widget_container\">\n          {props.children}\n        </div>\n    </PostsContext.Provider>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useJsonFetch(url, method) {\n  const [posts, setPosts] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(null);\n  const [fetchReqFlag, setFetchReqFlag] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      \n      try {\n        const response = await fetch(url, { method });\n        const data = await response.json();\n\n        if (!response.ok) {          \n          throw new Error(data.status);\n        }\n\n        setPosts((prev) => [...data]);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setTimeout(() => setLoading(false), 1000);\n      }\n    };\n\n    fetchData();\n  //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchReqFlag]);\n\n  return [\n    posts, \n    setPosts, \n    isLoading, \n    hasError, \n    fetchReqFlag, \n    setFetchReqFlag,\n    ];\n}\n","export default function EditableItem(props) {\n  const { className } = props;\n  \n  return (\n    <div className={className}>\n      {props.children}\n    </div>\n  )\n}","import { useContext } from 'react';\nimport PostsContext from '../../contexts/PostsContext';\n\nexport default function PostInput(props) {\n  const { inputValue, setInputValue } = useContext(PostsContext);\n  const { className } = props;\n\n  const handleInputChange = (e) => {\n    e.target.style.height = `${e.target.scrollHeight}px`;\n    setInputValue(e.target.value);\n  }\n\n  return (\n    <textarea\n      placeholder=\"New text here...\" \n      name='start-page_input' \n      className={`post_input ${className}`}\n      onChange={handleInputChange}\n      value={inputValue}></textarea>\n  )\n}","export default function ApplyButton(props) {\n  const { className, name,  onBtnClick } = props;\n\n  return (\n    <button  \n          className={`btn apply-btn ${className}`}\n          onClick={onBtnClick}\n    >\n      {name}\n    </button>\n  );\n}","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport moment from 'moment';\n\n\nimport PostsContext from '../../contexts/PostsContext';\n\nexport default function PostItem({ post }) {\n  const { setSelectedPost } = useContext(PostsContext);\n\n  const handlingPostClick = (post) => {\n    setSelectedPost(post);\n  }\n\n  return (\n    <Link to={`/posts/${post.id}`} className='post-item_box' onClick={() => handlingPostClick(post)}>\n      <div className=\"post-item_header\">\n        <img className=\"post-item_avatar\" \n          src={post.avatar} \n          alt={post.name} />\n        \n        <div className=\"post-item_info\">\n          <span className=\"post-item_info_name\">{post.name}</span>\n          <span className=\"post-item_info_time\">\n            {moment(post.created).format('DD-MM-YY hh:mm')}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"post-item_content\">{post.content}</div>\n    </Link>\n  );\n}\n","export default function Loader() {\n\n  return (\n    <div className=\"loader\">\n      <div className=\"loader_inner\" />\n    </div>\n  );\n}\n","import { useContext } from 'react';\n\n\nimport PostsContext from '../../contexts/PostsContext';\nimport PostItem from './PostItem';\nimport Loader from '../loaders/Loader';\n\nexport default function PostsList({ posts }) {\n  const { isLoading, hasError } = useContext(PostsContext);\n  \n  const element = !posts.length \n      ? <div className='empty-post_box'>У вас еще нет постов!</div> \n      : <div className='posts__box'>\n          { isLoading ? <Loader /> :\n            hasError ? <div>{hasError}</div> : \n            posts.map((post) => <PostItem key={post.id} post={post} />)}\n        </div>;\n\n  return (\n    <>\n      { element }      \n    </>\n  );\n}\n","import { useContext } from 'react';\n\nimport PostsContext from '../../contexts/PostsContext';\n\nimport EditableItem from '../EditableItem';\nimport PostInput from '../inputs/PostInput';\nimport ApplyButton from '../buttons/ApplyButton';\nimport PostsList from '../posts/PostsList';\n\nexport default function HomePage({ history, match}) {  \n  const { posts, inputValue } = useContext(PostsContext);\n\n  const onNewPostClick = (e) => {\n    history.push(`posts/new`);\n  }\n\n  return (\n    <>\n      <EditableItem className=\"start-page_editable\">\n        <PostInput className=\"new-post_input\"/>\n        <ApplyButton \n          className={`start-page_btn${!inputValue.trim() ? ' inactive' : ''}`}\n          name='Создать пост'\n          onBtnClick={onNewPostClick}\n        />\n      </EditableItem>\n      \n      <PostsList posts={posts} />\n    </>\n  );\n}\n","export default function CancelButton(props) {\n  const { className, onBtnClick } = props;\n\n  return (\n    <button  \n      className={`btn cancel-btn ${className}`}\n      onClick={onBtnClick}\n    >\n      <span className='material-icon'>close</span>\n    </button>\n  );\n}","import { useContext } from 'react';\nimport PostsContext from '../../contexts/PostsContext';\n\nimport EditableItem from '../EditableItem';\nimport PostInput from '../inputs/PostInput';\nimport ApplyButton from '../buttons/ApplyButton';\nimport CancelButton from '../buttons/CancelButton';\n\nexport default function NewPostPage({ history }) {\n  const { \n    inputValue, \n    setInputValue, \n    setFetchReqFlag, \n  } = useContext(PostsContext);\n  \n  const onNewPostClick = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_URL}posts`, \n        { method: 'POST',\n        body: JSON.stringify({\"id\": 0, \"content\": inputValue}),  \n      });\n\n      if (response.ok) {\n        setFetchReqFlag((prev) => !prev);\n        setInputValue('');\n        history.goBack();\n      }\n    } catch (e) {\n      console.log(e.message);\n    }     \n  }\n\n  const onCancelBtnClick = (e) => {\n    e.preventDefault();\n\n    history.goBack();\n  }\n  \n  return (\n    <EditableItem className=\"new-post_card\" >\n      <header className=\"page__title new-post_card_header\">\n        <h3>Создание нового поста</h3>\n        <CancelButton \n            className='new-post-page_btn'\n            onBtnClick={onCancelBtnClick}/>\n      </header>\n\n      <PostInput className='new-post-card_input'/>\n\n      <div className=\"btn_row\">\n         <ApplyButton \n            name='Опубликовать' \n            className='new-post-page_btn'\n            onBtnClick={onNewPostClick}/>\n      </div>\n    </EditableItem>    \n  )\n}\n","import { useContext } from 'react'; \nimport PostsContext from '../../contexts/PostsContext';\nimport PostItem from '../posts/PostItem';\nimport ApplyButton from '../buttons/ApplyButton';\nimport CancelButton from '../buttons/CancelButton';\n\nexport default function SelectedPostPage({ match, history }) {\n  const { selectedPost,\n    setFetchReqFlag,\n    setSelectedPost,\n    setInputValue,\n  } = useContext(PostsContext);\n\n  const onEditBtnClick = (e) => {\n    e.preventDefault();\n    setInputValue(selectedPost.content);\n    history.push(`${match.url}/editing`);\n  }\n\n  const onDelBtnClick = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_URL}posts/${selectedPost.id}`, \n        { method: 'DELETE' });      \n\n      if (response.ok) {\n        setFetchReqFlag((prev) => !prev);\n        setSelectedPost('');\n        history.push('/');\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n  \n  const onCancelBtnClick = (e) => {\n    e.preventDefault();\n    setInputValue('');\n    history.goBack();\n  }\n\n  return (\n    <>\n      <header className=\"page__title new-post_card_header\">\n        <h3>Просмотр поста</h3>\n        <CancelButton \n            className='new-post-page_btn'\n            onBtnClick={onCancelBtnClick}/>\n      </header>\n\n      <PostItem post={selectedPost} />\n      <div className=\"btn_row\">\n         <ApplyButton \n            name='Изменить' \n            className='new-post-page_btn'\n            onBtnClick={onEditBtnClick}/>\n\n          <ApplyButton \n            name='Удалить' \n            className='new-post-page_btn'\n            onBtnClick={onDelBtnClick}/>\n      </div>\n    </>\n  );\n}\n","import { useContext } from 'react'; \nimport PostsContext from '../../contexts/PostsContext';\nimport EditableItem from '../EditableItem';\nimport PostInput from '../inputs/PostInput';\nimport ApplyButton from '../buttons/ApplyButton';\nimport CancelButton from '../buttons/CancelButton';\n\nexport default function EditPostPage({ history }) {\n  const { \n    inputValue,\n    setInputValue,\n    selectedPost,\n    setSelectedPost,\n    setFetchReqFlag,\n  } = useContext(PostsContext);\n\n  const onCancelBtnClick = (e) => {\n    e.preventDefault();\n    setInputValue('');\n    history.goBack();\n  }\n\n  const onApplyChanges = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_URL}posts`, \n        { method: 'POST',\n        body: JSON.stringify({\"id\": selectedPost.id, \"content\": inputValue}),  \n      });\n\n      if (response.ok) {\n        setFetchReqFlag((prev) => !prev);        \n        setSelectedPost((prev) => ({...prev, content: inputValue}));\n        setInputValue('');\n        history.goBack();\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n  \n  return (\n    <>\n      <header className=\"page__title new-post_card_header\">\n        <h3>Редактирование поста</h3>\n        <CancelButton \n            className='new-post-page_btn'\n            onBtnClick={onCancelBtnClick}/>\n      </header>\n\n      <EditableItem className=\"new-post_card\" >\n      \n      <PostInput className='new-post-card_input'/>\n\n      <div className=\"btn_row\">\n         <ApplyButton \n            name='Применить' \n            className='new-post-page_btn'\n            onBtnClick={onApplyChanges}/>\n      </div>\n    </EditableItem>      \n    </>\n  )\n}\n","import ApplyButton from '../buttons/ApplyButton';\n\nexport default function NotFoundPage({ history }) {  \n\n  const onBackClick = () => {\n    history.goBack();\n  }\n\n  return (\n    <>\n      <div>\n        Такой страницы не существует\n      </div>\n      \n      <ApplyButton \n        className='start-page_btn'\n        name='Назад'\n        onBtnClick={onBackClick}\n      />\n    </>\n  );\n}","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport React from 'react';\n\n//crud\nimport PostsProvider from './providers/PostsProvider';\nimport HomePage from './components/pages/HomePage';\nimport NewPostPage from './components/pages/NewPostPage';\nimport SelectedPostPage from './components/pages/SelectedPostPage';\nimport EditPostPage from './components/pages/EditPostPage';\nimport NotFoundPage from './components/pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"task-title\">CRUD</div>\n      \n      <PostsProvider>\n        <Router >          \n          <Switch>\n            <Route path='/posts/new'\n                render={(props) => <NewPostPage {...props}/>}/>\n            <Route path='/posts/:id/editing' \n                render={(props) => <EditPostPage {...props}/>}/>\n            <Route path='/posts/:id' \n                render={(props) => <SelectedPostPage {...props}/>}/>\n            <Route  path='/'\n                render={(props) => <HomePage {...props} />}/>\n            <Route path='*' \n                render={(props) => <NotFoundPage {...props} /> } />\n\n          </Switch>\n        </Router> \n      </PostsProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}